<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Alarma', 'doctrine');

/**
 * BaseAlarma
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $local_id
 * @property integer $id_usuario
 * @property string $descripcion
 * @property timestamp $fecha_creacion
 * @property string $slug
 * @property Local $Local
 * 
 * @method integer   getId()             Returns the current record's "id" value
 * @method integer   getLocalId()        Returns the current record's "local_id" value
 * @method integer   getIdUsuario()      Returns the current record's "id_usuario" value
 * @method string    getDescripcion()    Returns the current record's "descripcion" value
 * @method timestamp getFechaCreacion()  Returns the current record's "fecha_creacion" value
 * @method string    getSlug()           Returns the current record's "slug" value
 * @method Local     getLocal()          Returns the current record's "Local" value
 * @method Alarma    setId()             Sets the current record's "id" value
 * @method Alarma    setLocalId()        Sets the current record's "local_id" value
 * @method Alarma    setIdUsuario()      Sets the current record's "id_usuario" value
 * @method Alarma    setDescripcion()    Sets the current record's "descripcion" value
 * @method Alarma    setFechaCreacion()  Sets the current record's "fecha_creacion" value
 * @method Alarma    setSlug()           Sets the current record's "slug" value
 * @method Alarma    setLocal()          Sets the current record's "Local" value
 * 
 * @package    yonohagofila_sf1.4
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAlarma extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('alarma');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('local_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_usuario', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('descripcion', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('fecha_creacion', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('slug', 'string', 265, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 265,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Local', array(
             'local' => 'local_id',
             'foreign' => 'id'));
    }
}