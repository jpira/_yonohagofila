<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Calendario', 'doctrine');

/**
 * BaseCalendario
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $local_id
 * @property timestamp $fecha_evento
 * @property string $tipo_evento
 * @property string $descripcion_evento
 * @property timestamp $fecha_creacion
 * @property integer $id_usuario
 * @property string $slug
 * @property timestamp $fecha_actualizacion
 * @property Local $Local
 * 
 * @method integer    getId()                  Returns the current record's "id" value
 * @method integer    getLocalId()             Returns the current record's "local_id" value
 * @method timestamp  getFechaEvento()         Returns the current record's "fecha_evento" value
 * @method string     getTipoEvento()          Returns the current record's "tipo_evento" value
 * @method string     getDescripcionEvento()   Returns the current record's "descripcion_evento" value
 * @method timestamp  getFechaCreacion()       Returns the current record's "fecha_creacion" value
 * @method integer    getIdUsuario()           Returns the current record's "id_usuario" value
 * @method string     getSlug()                Returns the current record's "slug" value
 * @method timestamp  getFechaActualizacion()  Returns the current record's "fecha_actualizacion" value
 * @method Local      getLocal()               Returns the current record's "Local" value
 * @method Calendario setId()                  Sets the current record's "id" value
 * @method Calendario setLocalId()             Sets the current record's "local_id" value
 * @method Calendario setFechaEvento()         Sets the current record's "fecha_evento" value
 * @method Calendario setTipoEvento()          Sets the current record's "tipo_evento" value
 * @method Calendario setDescripcionEvento()   Sets the current record's "descripcion_evento" value
 * @method Calendario setFechaCreacion()       Sets the current record's "fecha_creacion" value
 * @method Calendario setIdUsuario()           Sets the current record's "id_usuario" value
 * @method Calendario setSlug()                Sets the current record's "slug" value
 * @method Calendario setFechaActualizacion()  Sets the current record's "fecha_actualizacion" value
 * @method Calendario setLocal()               Sets the current record's "Local" value
 * 
 * @package    yonohagofila_sf1.4
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCalendario extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('calendario');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('local_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fecha_evento', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('tipo_evento', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('descripcion_evento', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('fecha_creacion', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('id_usuario', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('slug', 'string', 265, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 265,
             ));
        $this->hasColumn('fecha_actualizacion', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Local', array(
             'local' => 'local_id',
             'foreign' => 'id'));
    }
}