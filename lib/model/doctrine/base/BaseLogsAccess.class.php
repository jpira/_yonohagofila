<?php

/**
 * BaseLogsAccess
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $usuario_id
 * @property string $username
 * @property string $ip
 * @property string $proxy
 * @property boolean $estado
 * @property datetime $created_at
 * 
 * @method integer    getId()         Returns the current record's "id" value
 * @method integer    getUsuarioId()  Returns the current record's "usuario_id" value
 * @method string     getUsername()   Returns the current record's "username" value
 * @method string     getIp()         Returns the current record's "ip" value
 * @method string     getProxy()      Returns the current record's "proxy" value
 * @method boolean    getEstado()     Returns the current record's "estado" value
 * @method datetime   getCreatedAt()  Returns the current record's "created_at" value
 * @method LogsAccess setId()         Sets the current record's "id" value
 * @method LogsAccess setUsuarioId()  Sets the current record's "usuario_id" value
 * @method LogsAccess setUsername()   Sets the current record's "username" value
 * @method LogsAccess setIp()         Sets the current record's "ip" value
 * @method LogsAccess setProxy()      Sets the current record's "proxy" value
 * @method LogsAccess setEstado()     Sets the current record's "estado" value
 * @method LogsAccess setCreatedAt()  Sets the current record's "created_at" value
 * 
 * @package    Yonohagofila
 * @subpackage model
 * @author     Arquitectura - Juan Pablo Cardona Mejia <jpcardona@ibccodecontrol.com> - Desarrollo - Jeison Pira Murillo <jpira@ibccodecontrol.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseLogsAccess extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('logs_access');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('usuario_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('username', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('ip', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('proxy', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('estado', 'boolean', null, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('created_at', 'datetime', null, array(
             'type' => 'datetime',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}